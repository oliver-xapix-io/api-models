swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: The Storage Management Client.
  title: StorageManagementClient
  version: '2016-01-01'
  x-logo:
    backgroundColor: '#333333'
    url: 'https://apis-guru.github.io/api-models/cache/azure.com/arm-storage/2016-01-01/logo.png'
  x-origin:
    format: swagger
    url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-storage/2016-01-01/swagger/storage.json'
    version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: arm-storage
consumes:
  - application/json
  - text/json
produces:
  - application/json
  - text/json
parameters:
  ApiVersionParameter:
    description: Client Api Version.
    in: query
    name: api-version
    required: true
    type: string
  SubscriptionIdParameter:
    description: Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
paths:
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/checkNameAvailability':
    post:
      description: Checks that account name is valid and is not in use.
      operationId: StorageAccounts_CheckNameAvailability
      parameters:
        - description: The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.
          in: body
          name: accountName
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCheckNameAvailabilityParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResult'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the subscription. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable: {}
  '/subscriptions/{subscriptionId}/providers/Microsoft.Storage/usages':
    get:
      description: Gets the current usage count and the limit for the resources under the subscription.
      operationId: Usage_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UsageListResult'
      tags:
        - Usage
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts':
    get:
      description: Lists all the storage accounts available under the given resource group. Note that storage keys are not returned; use the ListKeys operation for this.
      operationId: StorageAccounts_ListByResourceGroup
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccountListResult'
      tags:
        - StorageAccounts
      x-ms-pageable: {}
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}':
    delete:
      description: Deletes a storage account in Microsoft Azure.
      operationId: StorageAccounts_Delete
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
        '204':
          description: ''
      tags:
        - StorageAccounts
    get:
      description: 'Returns the properties for the specified storage account including but not limited to name, account type, location, and account status. The ListKeys operation should be used to retrieve storage keys.'
      operationId: StorageAccounts_GetProperties
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    patch:
      description: 'The update operation can be used to update the account type, encryption, or tags for a storage account. It can also be used to map the account to a custom domain. Only one custom domain is supported per storage account and. replacement/change of custom domain is not supported. In order to replace an old custom domain, the old value must be cleared/unregistered before a new value may be set. Update of multiple properties is supported. This call does not change the storage keys for the account. If you want to change storage account keys, use the regenerate keys operation.  The location and name of the storage account cannot be changed after creation.'
      operationId: StorageAccounts_Update
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the updated account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountUpdateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccount'
      tags:
        - StorageAccounts
    put:
      description: 'Asynchronously creates a new storage account with the specified parameters. If an account is already created and subsequent create request is issued with different properties, the account properties will be updated. If an account is already created and subsequent create or update request is issued with exact same set of properties, the request will succeed.'
      operationId: StorageAccounts_Create
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: The parameters to provide for the created account.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/StorageAccountCreateParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccount'
        '202':
          description: ''
      tags:
        - StorageAccounts
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/listKeys':
    post:
      description: Lists the access keys for the specified storage account.
      operationId: StorageAccounts_ListKeys
      parameters:
        - description: The name of the resource group.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: The name of the storage account.
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccountListKeysResult'
      tags:
        - StorageAccounts
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/regenerateKey':
    post:
      description: Regenerates the access keys for the specified storage account.
      operationId: StorageAccounts_RegenerateKey
      parameters:
        - description: The name of the resource group within the user's subscription.
          in: path
          name: resourceGroupName
          required: true
          type: string
        - description: 'The name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only.  '
          in: path
          maxLength: 24
          minLength: 3
          name: accountName
          required: true
          type: string
        - description: Specifies name of the key which should be regenerated. key1 or key2 for the default keys
          in: body
          name: regenerateKey
          required: true
          schema:
            $ref: '#/definitions/StorageAccountRegenerateKeyParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/StorageAccountListKeysResult'
      tags:
        - StorageAccounts
definitions:
  CheckNameAvailabilityResult:
    description: The CheckNameAvailability operation response.
    properties:
      message:
        description: Gets an error message explaining the Reason value in more detail.
        readOnly: true
        type: string
      nameAvailable:
        description: 'Gets a boolean value that indicates whether the name is available for you to use. If true, the name is available. If false, the name has already been taken or invalid and cannot be used.'
        readOnly: true
        type: boolean
      reason:
        description: Gets the reason that a storage account name could not be used. The Reason element is only returned if NameAvailable is false.
        enum:
          - AccountNameInvalid
          - AlreadyExists
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: Reason
  CustomDomain:
    description: The custom domain assigned to this storage account. This can be set via Update.
    properties:
      name:
        description: Gets or sets the custom domain name. Name is the CNAME source.
        type: string
      useSubDomain:
        description: Indicates whether indirect CName validation is enabled. Default value is false. This should only be set on updates
        type: boolean
    required:
      - name
  Encryption:
    description: The encryption settings on the account.
    properties:
      keySource:
        description: 'Gets the encryption keySource(provider). Possible values (case-insensitive):  Microsoft.Storage'
        enum:
          - Microsoft.Storage
        type: string
      services:
        $ref: '#/definitions/EncryptionServices'
        description: Gets the services which are encrypted.
    required:
      - keySource
  EncryptionService:
    description: An encrypted service.
    properties:
      enabled:
        description: A boolean indicating whether or not the service is encrypted.
        type: boolean
      lastEnabledTime:
        description: Gets a time value indicating when was the encryption enabled by the user last time. We return this value only when encryption is enabled. There might be some unencrypted blobs which were written after this time. This time is just to give a rough estimate of when encryption was enabled.
        format: date-time
        readOnly: true
        type: string
  EncryptionServices:
    description: The encrypted services.
    properties:
      blob:
        $ref: '#/definitions/EncryptionService'
        description: The blob service.
  Endpoints:
    description: 'The URIs that are used to perform a retrieval of a public blob, queue or table object.'
    properties:
      blob:
        description: Gets the blob endpoint.
        readOnly: true
        type: string
      file:
        description: Gets the file endpoint.
        readOnly: true
        type: string
      queue:
        description: Gets the queue endpoint.
        readOnly: true
        type: string
      table:
        description: Gets the table endpoint.
        readOnly: true
        type: string
  Resource:
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      location:
        description: Resource location
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
      type:
        description: Resource type
        readOnly: true
        type: string
    x-ms-azure-resource: true
  Sku:
    description: The SKU of the storage account.
    properties:
      name:
        description: 'Gets or sets the sku name. Required for account creation, optional for update. Note that in older versions, sku name was called accountType.'
        enum:
          - Standard_LRS
          - Standard_GRS
          - Standard_RAGRS
          - Standard_ZRS
          - Premium_LRS
        type: string
        x-ms-enum:
          modelAsString: false
          name: SkuName
      tier:
        description: Gets the sku tier. This is based on the SKU name.
        enum:
          - Standard
          - Premium
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: SkuTier
    required:
      - name
  StorageAccount:
    allOf:
      - $ref: '#/definitions/Resource'
    description: The storage account.
    properties:
      kind:
        description: Gets the Kind.
        enum:
          - Storage
          - BlobStorage
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: Kind
      properties:
        $ref: '#/definitions/StorageAccountProperties'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: Gets the SKU.
        readOnly: true
  StorageAccountCheckNameAvailabilityParameters:
    properties:
      name:
        type: string
      type:
        enum:
          - Microsoft.Storage/storageAccounts
        type: string
    required:
      - name
      - type
  StorageAccountCreateParameters:
    description: The parameters to provide for the account.
    properties:
      kind:
        description: Required. Indicates the type of storage account.
        enum:
          - Storage
          - BlobStorage
        type: string
        x-ms-enum:
          modelAsString: false
          name: Kind
      location:
        description: 'Required. Gets or sets the location of the resource. This will be one of the supported and registered Azure Geo Regions (e.g. West US, East US, Southeast Asia, etc.). The geo region of a resource cannot be changed once it is created, but if an identical geo region is specified on update the request will succeed.'
        type: string
      properties:
        $ref: '#/definitions/StorageAccountPropertiesCreateParameters'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: Required. Gets or sets the sku type.
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        type: object
    required:
      - sku
      - kind
      - location
  StorageAccountKey:
    description: An access key for the storage account.
    properties:
      keyName:
        description: Name of the key.
        readOnly: true
        type: string
      permissions:
        description: Permissions for the key.
        enum:
          - READ
          - FULL
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: KeyPermission
      value:
        description: Base 64 encoded value of the key.
        readOnly: true
        type: string
  StorageAccountListKeysResult:
    description: The ListKeys operation response.
    properties:
      keys:
        description: Gets the list of account keys and their properties.
        items:
          $ref: '#/definitions/StorageAccountKey'
        readOnly: true
        type: array
  StorageAccountListResult:
    description: The list storage accounts operation response.
    properties:
      value:
        description: Gets the list of storage accounts and their properties.
        items:
          $ref: '#/definitions/StorageAccount'
        readOnly: true
        type: array
  StorageAccountProperties:
    properties:
      accessTier:
        description: 'The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.'
        enum:
          - Hot
          - Cool
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      creationTime:
        description: Gets the creation date and time of the storage account in UTC.
        format: date-time
        readOnly: true
        type: string
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: Gets the user assigned custom domain assigned to this storage account.
        readOnly: true
      encryption:
        $ref: '#/definitions/Encryption'
        description: Gets the encryption settings on the account. If unspecified the account is unencrypted.
        readOnly: true
      lastGeoFailoverTime:
        description: Gets the timestamp of the most recent instance of a failover to the secondary location. Only the most recent timestamp is retained. This element is not returned if there has never been a failover instance. Only available if the accountType is StandardGRS or StandardRAGRS.
        format: date-time
        readOnly: true
        type: string
      primaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue or table object.Note that StandardZRS and PremiumLRS accounts only return the blob endpoint.'
        readOnly: true
      primaryLocation:
        description: Gets the location of the primary for the storage account.
        readOnly: true
        type: string
      provisioningState:
        description: Gets the status of the storage account at the time the operation was called.
        enum:
          - Creating
          - ResolvingDNS
          - Succeeded
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: ProvisioningState
      secondaryEndpoints:
        $ref: '#/definitions/Endpoints'
        description: 'Gets the URLs that are used to perform a retrieval of a public blob, queue or table object from the secondary location of the storage account. Only available if the accountType is StandardRAGRS.'
        readOnly: true
      secondaryLocation:
        description: Gets the location of the geo replicated secondary for the storage account. Only available if the accountType is StandardGRS or StandardRAGRS.
        readOnly: true
        type: string
      statusOfPrimary:
        description: Gets the status indicating whether the primary location of the storage account is available or unavailable.
        enum:
          - Available
          - Unavailable
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
      statusOfSecondary:
        description: Gets the status indicating whether the secondary location of the storage account is available or unavailable. Only available if the accountType is StandardGRS or StandardRAGRS.
        enum:
          - Available
          - Unavailable
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccountStatus
  StorageAccountPropertiesCreateParameters:
    properties:
      accessTier:
        description: 'Required for StandardBlob accounts. The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.'
        enum:
          - Hot
          - Cool
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: 'User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
      encryption:
        $ref: '#/definitions/Encryption'
        description: Provides the encryption settings on the account. If left unspecified the account encryption settings will remain. The default setting is unencrypted.
  StorageAccountPropertiesUpdateParameters:
    properties:
      accessTier:
        description: 'The access tier used for billing. Access tier cannot be changed more than once every 7 days (168 hours). Access tier cannot be set for StandardLRS, StandardGRS, StandardRAGRS, or PremiumLRS account types.'
        enum:
          - Hot
          - Cool
        type: string
        x-ms-enum:
          modelAsString: false
          name: AccessTier
      customDomain:
        $ref: '#/definitions/CustomDomain'
        description: 'User domain assigned to the storage account. Name is the CNAME source. Only one custom domain is supported per storage account at this time. To clear the existing custom domain, use an empty string for the custom domain name property.'
      encryption:
        $ref: '#/definitions/Encryption'
        description: Provides the encryption settings on the account. The default setting is unencrypted.
  StorageAccountRegenerateKeyParameters:
    properties:
      keyName:
        type: string
    required:
      - keyName
  StorageAccountUpdateParameters:
    description: The parameters to provide for the account.
    properties:
      properties:
        $ref: '#/definitions/StorageAccountPropertiesUpdateParameters'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
        description: 'Gets or sets the sku type. Note that sku cannot be updated to StandardZRS or ProvisionedLRS, nor can accounts of that sku type be updated to any other value.'
      tags:
        additionalProperties:
          type: string
        description: Gets or sets a list of key value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters.
        type: object
  Usage:
    description: Describes Storage Resource Usage.
    properties:
      currentValue:
        description: Gets the current count of the allocated resources in the subscription.
        format: int32
        readOnly: true
        type: integer
      limit:
        description: Gets the maximum count of the resources that can be allocated in the subscription.
        format: int32
        readOnly: true
        type: integer
      name:
        $ref: '#/definitions/UsageName'
        description: Gets the name of the type of usage.
        readOnly: true
      unit:
        description: Gets the unit of measurement.
        enum:
          - Count
          - Bytes
          - Seconds
          - Percent
          - CountsPerSecond
          - BytesPerSecond
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: UsageUnit
  UsageListResult:
    description: The List Usages operation response.
    properties:
      value:
        description: Gets or sets the list Storage Resource Usages.
        items:
          $ref: '#/definitions/Usage'
        type: array
  UsageName:
    description: The Usage Names.
    properties:
      localizedValue:
        description: Gets a localized string describing the resource name.
        readOnly: true
        type: string
      value:
        description: Gets a string describing the resource name.
        readOnly: true
        type: string
