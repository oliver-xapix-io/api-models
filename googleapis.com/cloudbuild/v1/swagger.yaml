swagger: '2.0'
schemes:
  - https
host: cloudbuild.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: Builds container images in the cloud.
  title: Google Cloud Container Builder
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://apis-guru.github.io/api-models/cache/googleapis.com/cloudbuild/v1/logo.png'
  x-origin:
    format: google
    url: 'https://cloudbuild.googleapis.com/$discovery/rest?version=v1'
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: cloudbuild
externalDocs:
  url: 'https://cloud.google.com/container-builder/docs/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    enum:
      - '1'
      - '2'
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    enum:
      - json
      - media
      - proto
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
  - name: operations
paths:
  '/v1/projects/{projectId}/builds':
    get:
      description: |-
        Lists previously requested builds.

        Previously requested builds may still be in-progress, or may have finished
        successfully or unsuccessfully.
      operationId: cloudbuild.projects.builds.list
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: Number of results to return in the list.
          in: query
          name: pageSize
          type: integer
        - description: Token to provide to skip to a particular spot in the list.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListBuildsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/bearer_token'
    post:
      description: |-
        Starts a build with the specified configuration.

        The long-running Operation returned by this method will include the ID of
        the build, which can be passed to GetBuild to determine its status (e.g.,
        success or failure).
      operationId: cloudbuild.projects.builds.create
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Build'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Operation'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/projects/{projectId}/builds/{id}':
    get:
      description: |-
        Returns information about a previously requested build.

        The Build that is returned includes its status (e.g., success or failure,
        or in-progress), and timing information.
      operationId: cloudbuild.projects.builds.get
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the build.
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Build'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/bearer_token'
  '/v1/projects/{projectId}/builds/{id}:cancel':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/bearer_token'
    post:
      description: Cancels a requested build in progress.
      operationId: cloudbuild.projects.builds.cancel
      parameters:
        - description: ID of the project.
          in: path
          name: projectId
          required: true
          type: string
        - description: ID of the build.
          in: path
          name: id
          required: true
          type: string
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CancelBuildRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Build'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}':
    get:
      description: |-
        Lists operations that match the specified filter in the request. If the
        server doesn't support this method, it returns `UNIMPLEMENTED`.

        NOTE: the `name` binding below allows API services to override the binding
        to use different resource name schemes, such as `users/*/operations`.
      operationId: cloudbuild.operations.list
      parameters:
        - description: The name of the operation collection.
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: The standard list page size.
          in: query
          name: pageSize
          type: integer
        - description: The standard list filter.
          in: query
          name: filter
          type: string
        - description: The standard list page token.
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListOperationsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - operations
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/$.xgafv'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/bearer_token'
definitions:
  Build:
    description: |-
      A build resource in the Container Builder API.

      At a high level, a Build describes where to find source code, how to build
      it (for example, the builder image to run on the source), and what tag to
      apply to the built image when it is pushed to Google Container Registry.
    properties:
      createTime:
        description: |-
          Time at which the build was created.
          @OutputOnly
        format: google-datetime
        type: string
      finishTime:
        description: |-
          Time at whihc execution of the build was finished.
          @OutputOnly
        format: google-datetime
        type: string
      id:
        description: |-
          Unique identifier of the build.
          @OutputOnly
        type: string
      images:
        description: |-
          List of images expected to be built and pushed to Google Container
          Registry. If an image is listed here and the image is not produced by
          one of the build steps, the build will fail. Any images present when
          the build steps are complete will be pushed to Container Registry.
        items:
          type: string
        type: array
      logsBucket:
        description: |-
          Google Cloud Storage bucket where logs should be written (see
          [Bucket Name
          Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
          Logs file names will be of the format `${logs_bucket}/log-${build_id}.txt`.
        type: string
      projectId:
        description: |-
          ID of the project.
          @OutputOnly.
        type: string
      results:
        $ref: '#/definitions/Results'
        description: |-
          Results of the build.
          @OutputOnly
      source:
        $ref: '#/definitions/Source'
        description: Describes where to find the source files to build.
      startTime:
        description: |-
          Time at which execution of the build was started.
          @OutputOnly
        format: google-datetime
        type: string
      status:
        description: |-
          Status of the build.
          @OutputOnly
        enum:
          - STATUS_UNKNOWN
          - QUEUED
          - WORKING
          - SUCCESS
          - FAILURE
          - INTERNAL_ERROR
          - TIMEOUT
          - CANCELLED
        type: string
      steps:
        description: Describes the operations to be performed on the workspace.
        items:
          $ref: '#/definitions/BuildStep'
        type: array
      timeout:
        description: |-
          Amount of time that this build should be allowed to run, to second
          granularity. If this amount of time elapses, work on the build will cease
          and the build status will be TIMEOUT.

          Default time is ten minutes.
        format: google-duration
        type: string
    type: object
  BuildOperationMetadata:
    description: Metadata for build operations.
    properties:
      build:
        $ref: '#/definitions/Build'
        description: The build that the operation is tracking.
    type: object
  BuildStep:
    description: BuildStep describes a step to perform in the build pipeline.
    properties:
      args:
        description: Command-line arguments to use when running this step's container.
        items:
          type: string
        type: array
      dir:
        description: |-
          Working directory (relative to project source root) to use when running
          this operation's container.
        type: string
      env:
        description: Additional environment variables to set for this step's container.
        items:
          type: string
        type: array
      name:
        description: |-
          Name of the container image to use for creating this stage in the
          pipeline, as presented to `docker pull`.
        type: string
    type: object
  BuiltImage:
    description: BuiltImage describes an image built by the pipeline.
    properties:
      digest:
        description: Docker Registry 2.0 digest.
        type: string
      name:
        description: |-
          Name used to push the container image to Google Container Registry, as
          presented to `docker push`.
        type: string
    type: object
  CancelBuildRequest:
    description: Request to cancel an ongoing build.
    properties: {}
    type: object
  ListBuildsResponse:
    description: Response including listed builds.
    properties:
      builds:
        description: 'Builds will be sorted by create_time, descending.'
        items:
          $ref: '#/definitions/Build'
        type: array
      nextPageToken:
        description: Token to receive the next page of results.
        type: string
    type: object
  ListOperationsResponse:
    description: The response message for Operations.ListOperations.
    properties:
      nextPageToken:
        description: The standard List next-page token.
        type: string
      operations:
        description: A list of operations that matches the specified filter in the request.
        items:
          $ref: '#/definitions/Operation'
        type: array
    type: object
  Operation:
    description: |-
      This resource represents a long-running operation that is the result of a
      network API call.
    properties:
      done:
        description: |-
          If the value is `false`, it means the operation is still in progress.
          If true, the operation is completed, and either `error` or `response` is
          available.
        type: boolean
      error:
        $ref: '#/definitions/Status'
        description: The error result of the operation in case of failure.
      metadata:
        additionalProperties:
          description: Properties of the object. Contains field @ype with type URL.
        description: |-
          Service-specific metadata associated with the operation.  It typically
          contains progress information and common metadata such as create time.
          Some services might not provide such metadata.  Any method that returns a
          long-running operation should document the metadata type, if any.
        type: object
      name:
        description: |-
          The server-assigned name, which is only unique within the same service that
          originally returns it. If you use the default HTTP mapping, the
          `name` should have the format of `operations/some/unique/name`.
        type: string
      response:
        additionalProperties:
          description: Properties of the object. Contains field @ype with type URL.
        description: |-
          The normal response of the operation in case of success.  If the original
          method returns no data on success, such as `Delete`, the response is
          `google.protobuf.Empty`.  If the original method is standard
          `Get`/`Create`/`Update`, the response should be the resource.  For other
          methods, the response should have the type `XxxResponse`, where `Xxx`
          is the original method name.  For example, if the original method name
          is `TakeSnapshot()`, the inferred response type is
          `TakeSnapshotResponse`.
        type: object
    type: object
  Results:
    description: Results describes the artifacts created by the build pipeline.
    properties:
      images:
        description: Images that were built as a part of the build.
        items:
          $ref: '#/definitions/BuiltImage'
        type: array
    type: object
  Source:
    description: |-
      Source describes the location of the source in a supported storage
      service.
    properties:
      storageSource:
        $ref: '#/definitions/StorageSource'
        description: |-
          If provided, get the source from this location in in Google Cloud
          Storage.
    type: object
  Status:
    description: |-
      The `Status` type defines a logical error model that is suitable for different
      programming environments, including REST APIs and RPC APIs. It is used by
      [gRPC](https://github.com/grpc). The error model is designed to be:

      - Simple to use and understand for most users
      - Flexible enough to meet unexpected needs

      # Overview

      The `Status` message contains three pieces of data: error code, error message,
      and error details. The error code should be an enum value of
      google.rpc.Code, but it may accept additional error codes if needed.  The
      error message should be a developer-facing English message that helps
      developers *understand* and *resolve* the error. If a localized user-facing
      error message is needed, put the localized message in the error details or
      localize it in the client. The optional error details may contain arbitrary
      information about the error. There is a predefined set of error detail types
      in the package `google.rpc` which can be used for common error conditions.

      # Language mapping

      The `Status` message is the logical representation of the error model, but it
      is not necessarily the actual wire format. When the `Status` message is
      exposed in different client libraries and different wire protocols, it can be
      mapped differently. For example, it will likely be mapped to some exceptions
      in Java, but more likely mapped to some error codes in C.

      # Other uses

      The error model and the `Status` message can be used in a variety of
      environments, either with or without APIs, to provide a
      consistent developer experience across different environments.

      Example uses of this error model include:

      - Partial errors. If a service needs to return partial errors to the client,
          it may embed the `Status` in the normal response to indicate the partial
          errors.

      - Workflow errors. A typical workflow has multiple steps. Each step may
          have a `Status` message for error reporting purpose.

      - Batch operations. If a client uses batch request and batch response, the
          `Status` message should be used directly inside batch response, one for
          each error sub-response.

      - Asynchronous operations. If an API call embeds asynchronous operation
          results in its response, the status of those operations should be
          represented directly using the `Status` message.

      - Logging. If some API errors are stored in logs, the message `Status` could
          be used directly after any stripping needed for security/privacy reasons.
    properties:
      code:
        description: 'The status code, which should be an enum value of google.rpc.Code.'
        format: int32
        type: integer
      details:
        description: |-
          A list of messages that carry the error details.  There will be a
          common set of message types for APIs to use.
        items:
          additionalProperties:
            description: Properties of the object. Contains field @ype with type URL.
          type: object
        type: array
      message:
        description: |-
          A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  StorageSource:
    description: |-
      StorageSource describes the location of the source in an archive file in
      Google Cloud Storage.
    properties:
      bucket:
        description: |-
          Google Cloud Storage bucket containing source (see
          [Bucket Name
          Requirements](https://cloud.google.com/storage/docs/bucket-naming#requirements)).
        type: string
      generation:
        description: |-
          Google Cloud Storage generation for the object. If the generation is
          omitted, the latest generation will be used.
        format: int64
        type: string
      object:
        description: |-
          Google Cloud Storage object containing source.

          This object must be a gzipped archive file (.tar.gz) containing source to
          build.
        type: string
    type: object
