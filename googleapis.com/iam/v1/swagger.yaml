swagger: '2.0'
schemes:
  - https
host: iam.googleapis.com
basePath: /
info:
  contact:
    name: Google
    url: 'https://google.com'
  description: 'Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls.'
  title: Google Identity and Access Management
  version: v1
  x-apiClientRegistration:
    url: 'https://console.developers.google.com'
  x-logo:
    url: 'https://apis-guru.github.io/api-models/cache/googleapis.com/iam/v1/logo.png'
  x-origin:
    format: google
    url: 'https://www.googleapis.com/discovery/v1/apis/iam/v1/rest'
    version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: iam
externalDocs:
  url: 'https://cloud.google.com/iam/'
securityDefinitions:
  Oauth2:
    authorizationUrl: 'https://accounts.google.com/o/oauth2/auth'
    description: Oauth 2.0 authentication
    flow: implicit
    scopes:
      'https://www.googleapis.com/auth/cloud-platform': View and manage your data across Google Cloud Platform services
    type: oauth2
parameters:
  $.xgafv:
    description: V1 error format.
    in: query
    name: $.xgafv
    type: string
  access_token:
    description: OAuth access token.
    in: query
    name: access_token
    type: string
  alt:
    default: json
    description: Data format for response.
    in: query
    name: alt
    type: string
  bearer_token:
    description: OAuth bearer token.
    in: query
    name: bearer_token
    type: string
  callback:
    description: JSONP
    in: query
    name: callback
    type: string
  fields:
    description: Selector specifying which fields to include in a partial response.
    in: query
    name: fields
    type: string
  key:
    description: 'API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.'
    in: query
    name: key
    type: string
  oauth_token:
    description: OAuth 2.0 token for the current user.
    in: query
    name: oauth_token
    type: string
  pp:
    default: true
    description: Pretty-print response.
    in: query
    name: pp
    type: boolean
  prettyPrint:
    default: true
    description: Returns response with indentations and line breaks.
    in: query
    name: prettyPrint
    type: boolean
  quotaUser:
    description: 'Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.'
    in: query
    name: quotaUser
    type: string
  uploadType:
    description: 'Legacy upload protocol for media (e.g. "media", "multipart").'
    in: query
    name: uploadType
    type: string
  upload_protocol:
    description: 'Upload protocol for media (e.g. "raw", "multipart").'
    in: query
    name: upload_protocol
    type: string
tags:
  - name: projects
paths:
  '/v1/{name}':
    delete:
      description: Deletes a service account key.
      operationId: iam.projects.serviceAccounts.keys.delete
      parameters:
        - description: 'The resource name of the service account key in the format "projects/{project}/serviceAccounts/{account}/keys/{key}". Using ''-'' as a wildcard for the project will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Empty'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    get:
      description: Gets the ServiceAccountKey by key id.
      operationId: iam.projects.serviceAccounts.keys.get
      parameters:
        - description: 'The resource name of the service account key in the format "projects/{project}/serviceAccounts/{account}/keys/{key}". Using ''-'' as a wildcard for the project will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ServiceAccountKey'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    put:
      description: 'Updates a service account. Currently, only the following fields are updatable: ''display_name'' . The ''etag'' is mandatory.'
      operationId: iam.projects.serviceAccounts.update
      parameters:
        - description: 'The resource name of the service account in the format "projects/{project}/serviceAccounts/{account}". In requests using ''-'' as a wildcard for the project, will infer the project from the account and the account value can be the email address or the unique_id of the service account. In responses the resource name will always be in the format "projects/{project}/serviceAccounts/{email}".'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ServiceAccount'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ServiceAccount'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}/keys':
    get:
      description: Lists service account keys
      operationId: iam.projects.serviceAccounts.keys.list
      parameters:
        - description: 'The resource name of the service account in the format "projects/{project}/serviceAccounts/{account}". Using ''-'' as a wildcard for the project, will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - collectionFormat: multi
          description: 'The type of keys the user wants to list. If empty, all key types are included in the response. Duplicate key types are not allowed.'
          in: query
          items:
            enum:
              - KEY_TYPE_UNSPECIFIED
              - USER_MANAGED
              - SYSTEM_MANAGED
            type: string
          name: keyTypes
          type: array
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListServiceAccountKeysResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Creates a service account key and returns it.
      operationId: iam.projects.serviceAccounts.keys.create
      parameters:
        - description: 'The resource name of the service account in the format "projects/{project}/serviceAccounts/{account}". Using ''-'' as a wildcard for the project, will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateServiceAccountKeyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ServiceAccountKey'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}/serviceAccounts':
    get:
      description: Lists service accounts for a project.
      operationId: iam.projects.serviceAccounts.list
      parameters:
        - description: 'Required. The resource name of the project associated with the service accounts, such as "projects/123"'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - description: 'Optional limit on the number of service accounts to include in the response. Further accounts can subsequently be obtained by including the [ListServiceAccountsResponse.next_page_token] in a subsequent request.'
          in: query
          name: pageSize
          type: integer
        - description: 'Optional pagination token returned in an earlier [ListServiceAccountsResponse.next_page_token].'
          in: query
          name: pageToken
          type: string
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ListServiceAccountsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Creates a service account and returns it.
      operationId: iam.projects.serviceAccounts.create
      parameters:
        - description: 'Required. The resource name of the project associated with the service accounts, such as "projects/123"'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CreateServiceAccountRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/ServiceAccount'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{name}:signBlob':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Signs a blob using a service account.
      operationId: iam.projects.serviceAccounts.signBlob
      parameters:
        - description: 'The resource name of the service account in the format "projects/{project}/serviceAccounts/{account}". Using ''-'' as a wildcard for the project, will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
          in: path
          name: name
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SignBlobRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/SignBlobResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{resource}:getIamPolicy':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Returns the IAM access control policy for specified IAM resource.
      operationId: iam.projects.serviceAccounts.getIamPolicy
      parameters:
        - description: 'REQUIRED: The resource for which the policy is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `getIamPolicy` documentation.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{resource}:setIamPolicy':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Sets the IAM access control policy for the specified IAM resource.
      operationId: iam.projects.serviceAccounts.setIamPolicy
      parameters:
        - description: 'REQUIRED: The resource for which the policy is being specified. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `setIamPolicy` documentation.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SetIamPolicyRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/Policy'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
  '/v1/{resource}:testIamPermissions':
    parameters:
      - $ref: '#/parameters/access_token'
      - $ref: '#/parameters/alt'
      - $ref: '#/parameters/bearer_token'
      - $ref: '#/parameters/callback'
      - $ref: '#/parameters/fields'
      - $ref: '#/parameters/key'
      - $ref: '#/parameters/oauth_token'
      - $ref: '#/parameters/pp'
      - $ref: '#/parameters/prettyPrint'
      - $ref: '#/parameters/quotaUser'
      - $ref: '#/parameters/upload_protocol'
      - $ref: '#/parameters/uploadType'
      - $ref: '#/parameters/$.xgafv'
    post:
      description: Tests the specified permissions against the IAM access control policy for the specified IAM resource.
      operationId: iam.projects.serviceAccounts.testIamPermissions
      parameters:
        - description: 'REQUIRED: The resource for which the policy detail is being requested. `resource` is usually specified as a path, such as `projects/*project*/zones/*zone*/disks/*disk*`. The format for the path specified in this value is resource specific and is specified in the `testIamPermissions` documentation.'
          in: path
          name: resource
          required: true
          type: string
          x-reservedExpansion: true
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TestIamPermissionsRequest'
      responses:
        '200':
          description: Successful response
          schema:
            $ref: '#/definitions/TestIamPermissionsResponse'
      security:
        - Oauth2:
            - 'https://www.googleapis.com/auth/cloud-platform'
      tags:
        - projects
definitions:
  Binding:
    description: Associates `members` with a `role`.
    properties:
      members:
        description: 'Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@gmail.com` or `joe@example.com`. * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: A Google Apps domain name that represents all the users of that domain. For example, `google.com` or `example.com`.'
        items:
          type: string
        type: array
      role:
        description: 'Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. Required'
        type: string
    type: object
  CloudAuditOptions:
    description: Write a Cloud Audit log
    type: object
  Condition:
    description: A condition to be met.
    properties:
      iam:
        description: Trusted attributes supplied by the IAM system.
        enum:
          - NO_ATTR
          - AUTHORITY
          - ATTRIBUTION
        type: string
      op:
        description: An operator to apply the subject with.
        enum:
          - NO_OP
          - EQUALS
          - NOT_EQUALS
          - IN
          - NOT_IN
          - DISCHARGED
        type: string
      svc:
        description: Trusted attributes discharged by the service.
        type: string
      sys:
        description: Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.
        enum:
          - NO_ATTR
          - REGION
          - SERVICE
          - NAME
          - IP
        type: string
      value:
        description: The object of the condition. Exactly one of these must be set.
        type: string
      values:
        description: The objects of the condition. This is mutually exclusive with 'value'.
        items:
          type: string
        type: array
    type: object
  CounterOptions:
    description: Options for counters
    properties:
      field:
        description: The field value to attribute.
        type: string
      metric:
        description: The metric to update.
        type: string
    type: object
  CreateServiceAccountKeyRequest:
    description: The service account key create request.
    properties:
      privateKeyType:
        description: The type of the key requested. GOOGLE_CREDENTIALS is the default key type.
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_PKCS12_FILE
          - TYPE_GOOGLE_CREDENTIALS_FILE
        type: string
    type: object
  CreateServiceAccountRequest:
    description: The service account create request.
    properties:
      accountId:
        description: 'Required. The account id that is used to generate the service account email address and a stable unique id. It is unique within a project, must be 1-63 characters long, and match the regular expression [a-z]([-a-z0-9]*[a-z0-9]) to comply with RFC1035.'
        type: string
      serviceAccount:
        $ref: '#/definitions/ServiceAccount'
        description: 'The ServiceAccount resource to create. Currently, only the following values are user assignable: display_name .'
    type: object
  DataAccessOptions:
    description: Write a Data Access (Gin) log
    type: object
  Empty:
    description: 'A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.'
    type: object
  ListServiceAccountKeysResponse:
    description: The service account keys list response.
    properties:
      keys:
        description: The public keys for the service account.
        items:
          $ref: '#/definitions/ServiceAccountKey'
        type: array
    type: object
  ListServiceAccountsResponse:
    description: The service account list response.
    properties:
      accounts:
        description: The list of matching service accounts.
        items:
          $ref: '#/definitions/ServiceAccount'
        type: array
      nextPageToken:
        description: 'To retrieve the next page of results, set [ListServiceAccountsRequest.page_token] to this value.'
        type: string
    type: object
  LogConfig:
    description: 'Specifies what kind of log the caller must write Increment a streamz counter with the specified metric and field names. Metric names should start with a ''/'', generally be lowercase-only, and end in "_count". Field names should not contain an initial slash. The actual exported metric names will have "/iam/policy" prepended. Field names correspond to IAM request parameters and field values are their respective values. At present only "iam_principal", corresponding to IAMContext.principal, is supported. Examples: counter { metric: "/debug_access_count" field: "iam_principal" } ==> increment counter /iam/policy/backend_debug_access_count {iam_principal=[value of IAMContext.principal]} At this time we do not support: * multiple field names (though this may be supported in the future) * decrementing the counter * incrementing it by anything other than 1'
    properties:
      cloudAudit:
        $ref: '#/definitions/CloudAuditOptions'
        description: Cloud audit options.
      counter:
        $ref: '#/definitions/CounterOptions'
        description: Counter options.
      dataAccess:
        $ref: '#/definitions/DataAccessOptions'
        description: Data access options.
    type: object
  Policy:
    description: 'Defines an Identity and Access Management (IAM) policy. It is used to specify access control policies for Cloud Platform resources. A `Policy` consists of a list of `bindings`. A `Binding` binds a list of `members` to a `role`, where the members can be user accounts, Google groups, Google domains, and service accounts. A `role` is a named list of permissions defined by IAM. **Example** { "bindings": [ { "role": "roles/owner", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-other-app@appspot.gserviceaccount.com"] }, { "role": "roles/viewer", "members": ["user:sean@example.com"] } ] } For a description of IAM and its features, see the [IAM developer''s guide](https://cloud.google.com/iam).'
    properties:
      bindings:
        description: Associates a list of `members` to a `role`. Multiple `bindings` must not be specified for the same `role`. `bindings` with no members will result in an error.
        items:
          $ref: '#/definitions/Binding'
        type: array
      etag:
        description: '`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. If no `etag` is provided in the call to `setIamPolicy`, then the existing policy is overwritten blindly.'
        format: byte
        type: string
      rules:
        items:
          $ref: '#/definitions/Rule'
        type: array
      version:
        description: Version of the `Policy`. The default version is 0.
        format: int32
        type: integer
    type: object
  Rule:
    description: A rule to be applied in a Policy.
    properties:
      action:
        description: Required
        enum:
          - NO_ACTION
          - ALLOW
          - ALLOW_WITH_LOG
          - DENY
          - DENY_WITH_LOG
          - LOG
        type: string
      conditions:
        description: Additional restrictions that must be met
        items:
          $ref: '#/definitions/Condition'
        type: array
      description:
        description: Human-readable description of the rule.
        type: string
      in:
        description: The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in this set of entries.
        items:
          type: string
        type: array
      logConfig:
        description: The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.
        items:
          $ref: '#/definitions/LogConfig'
        type: array
      notIn:
        description: The rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is not in this set of entries. The format for in and not_in entries is the same as for members in a Binding (see google/iam/v1/policy.proto).
        items:
          type: string
        type: array
      permissions:
        description: 'A permission is a string of form ''..'' (e.g., ''storage.buckets.list''). A value of ''*'' matches all permissions, and a verb part of ''*'' (e.g., ''storage.buckets.*'') matches all verbs.'
        items:
          type: string
        type: array
    type: object
  ServiceAccount:
    description: 'A service account in the Identity and Access Management API. To create a service account, you specify the project_id and account_id for the account. The account_id is unique within the project, and used to generate the service account email address and a stable unique id. All other methods can identify accounts using the format "projects/{project}/serviceAccounts/{account}". Using ''-'' as a wildcard for the project, will infer the project from the account. The account value can be the email address or the unique_id of the service account.'
    properties:
      displayName:
        description: Optional. A user-specified description of the service account. Must be fewer than 100 UTF-8 bytes.
        type: string
      email:
        description: '@OutputOnly Email address of the service account.'
        type: string
      etag:
        description: Used to perform a consistent read-modify-write.
        format: byte
        type: string
      name:
        description: 'The resource name of the service account in the format "projects/{project}/serviceAccounts/{account}". In requests using ''-'' as a wildcard for the project, will infer the project from the account and the account value can be the email address or the unique_id of the service account. In responses the resource name will always be in the format "projects/{project}/serviceAccounts/{email}".'
        type: string
      oauth2ClientId:
        description: '@OutputOnly. The OAuth2 client id for the service account. This is used in conjunction with the OAuth2 clientconfig API to make three legged OAuth2 (3LO) flows to access the data of Google users.'
        type: string
      projectId:
        description: '@OutputOnly The id of the project that owns the service account.'
        type: string
      uniqueId:
        description: '@OutputOnly unique and stable id of the service account.'
        type: string
    type: object
  ServiceAccountKey:
    description: Represents a service account key. A service account can have 0 or more key pairs. The private keys for these are not stored by Google. ServiceAccountKeys are immutable.
    properties:
      name:
        description: 'The resource name of the service account key in the format "projects/{project}/serviceAccounts/{email}/keys/{key}".'
        type: string
      privateKeyData:
        description: The key data.
        format: byte
        type: string
      privateKeyType:
        description: The type of the private key.
        enum:
          - TYPE_UNSPECIFIED
          - TYPE_PKCS12_FILE
          - TYPE_GOOGLE_CREDENTIALS_FILE
        type: string
      validAfterTime:
        description: The key can be used after this timestamp.
        type: string
      validBeforeTime:
        description: The key can be used before this timestamp.
        type: string
    type: object
  SetIamPolicyRequest:
    description: Request message for `SetIamPolicy` method.
    properties:
      policy:
        $ref: '#/definitions/Policy'
        description: 'REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.'
    type: object
  SignBlobRequest:
    description: The service account sign blob request.
    properties:
      bytesToSign:
        description: The bytes to sign
        format: byte
        type: string
    type: object
  SignBlobResponse:
    description: The service account sign blob response.
    properties:
      keyId:
        description: The id of the key used to sign the blob.
        type: string
      signature:
        description: The signed blob.
        format: byte
        type: string
    type: object
  TestIamPermissionsRequest:
    description: Request message for `TestIamPermissions` method.
    properties:
      permissions:
        description: The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see IAM Overview.
        items:
          type: string
        type: array
    type: object
  TestIamPermissionsResponse:
    description: Response message for `TestIamPermissions` method.
    properties:
      permissions:
        description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
        items:
          type: string
        type: array
    type: object
